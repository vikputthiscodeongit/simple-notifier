{"version":3,"sources":["../../src/js/index.js"],"names":[],"mappings":"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","file":"simple-notifier.esm.js","sourcesContent":["const mergeOptions = require(\"merge-options\");\r\nimport { getPropValue, motionAllowed, timeToMs } from \"@codebundlesbyvik/css-operations\";\r\nimport createEl from \"@codebundlesbyvik/element-operations\";\r\nimport getRandomIntUnder from \"@codebundlesbyvik/number-operations\";\r\n\r\nconst defaultOptions = {\r\n    autoHide: true,            // Number / Boolean\r\n    onlyOneNotification: true, // Boolean\r\n    parentEl: document.body,   // Element\r\n    position: \"top center\",    // String\r\n    animations: \"auto\"         // String / Boolean\r\n};\r\n\r\nclass SN {\r\n    constructor(userOptions = {}) {\r\n        this.mergedOptions = mergeOptions(defaultOptions, userOptions);\r\n\r\n        this.autoHide = this.mergedOptions.autoHide;\r\n        this.parentEl = this.mergedOptions.parentEl;\r\n        this.position = this.mergedOptions.position;\r\n        this.motionPref = this.mergedOptions.animations;\r\n\r\n        this.instanceId = null;\r\n\r\n        this.nId = 1;\r\n        this.nodes = {};\r\n        this.msgData = {};\r\n\r\n        this.timeoutIds = {};\r\n        this.events = {};\r\n        this.onlyOne = {\r\n            set: this.mergedOptions.onlyOneNotification,\r\n            states: {},\r\n            nextMsgData: {}\r\n        };\r\n\r\n        this.animatedRun = null;\r\n    }\r\n\r\n    static nodeClasses = {\r\n        wrapper: \"simple-notifier\",\r\n        notification: \"simple-notification\",\r\n        typeRegex: /simple-notification--[A-Za-z]+/g,\r\n        shown: \"is-shown\",\r\n        anim: {\r\n            base: \"animated\",\r\n            show: \"fadeIn\",\r\n            hide: \"fadeOut\"\r\n        }\r\n    }\r\n\r\n    static nodeSkeletons = {\r\n        wrapper: {\r\n            tagName: \"div\",\r\n            attrs: {\r\n                class: SN.nodeClasses.wrapper\r\n            }\r\n        },\r\n        notification: {\r\n            tagName: \"div\",\r\n            attrs: {\r\n                class: SN.nodeClasses.notification,\r\n                role: \"alert\"\r\n            }\r\n        },\r\n        message: {\r\n            tagName: \"p\",\r\n            attrs: {\r\n                class: `${SN.nodeClasses.notification}__message`\r\n            }\r\n        }\r\n    };\r\n\r\n    static defaultMsgData = {\r\n        notext: {\r\n            text: \"This is some dummy text for you, because none was passed in.\",\r\n            type: \"debug\"\r\n        },\r\n        notype: {\r\n            type: \"default\"\r\n        }\r\n    };\r\n\r\n    get animated() {\r\n        switch(this.motionPref) {\r\n            case \"undefined\":\r\n            case \"auto\":\r\n                return motionAllowed();\r\n            default:\r\n                return this.motionPref;\r\n        }\r\n    }\r\n\r\n    get hideCallTimeout() {\r\n        switch(this.autoHide) {\r\n            case true:\r\n                return 3500;\r\n            case false:\r\n                return 0;\r\n            default:\r\n                return this.autoHide;\r\n        }\r\n    }\r\n\r\n    init() {\r\n        console.log(\"SN: Running .init()...\");\r\n\r\n        if (this.instanceId) {\r\n            throw new Error(`SN: .init() has already been called on this instance (${this.instanceId}).`);\r\n        }\r\n\r\n        this.instanceId = getRandomIntUnder(100000);\r\n\r\n        this.nodes.wrapper = createEl(\r\n            SN.nodeSkeletons.wrapper.tagName,\r\n            SN.nodeSkeletons.wrapper.attrs\r\n        );\r\n\r\n        this.nodes.wrapper.dataset.instanceId = this.instanceId;\r\n\r\n        const parentElFChild = this.parentEl.firstElementChild;\r\n\r\n        // Insert the instance in the DOM after any earlier initialized instances sharing the same parentEl.\r\n        const siblingEl = parentElFChild.classList.contains(\"simple-notifier\")\r\n            ? parentElFChild.nextElementSibling\r\n            : parentElFChild;\r\n\r\n        this.parentEl.insertBefore(this.nodes.wrapper, siblingEl);\r\n\r\n        const screenPosArray = this.position.split(\" \");\r\n\r\n        // If only a y-position is set by the user, add an x-position.\r\n        if (screenPosArray.length === 1) {\r\n            screenPosArray[1] = \"center\";\r\n        }\r\n\r\n        this.nodes.wrapper.classList.add(\r\n            `${SN.nodeClasses.wrapper}--pos-y-${screenPosArray[0]}`,\r\n            `${SN.nodeClasses.wrapper}--pos-x-${screenPosArray[1]}`\r\n        );\r\n\r\n        this.events.allDestroyed = new CustomEvent(\"allNotificationsDestroyed\", { detail: {\r\n            instanceId: this.instanceId\r\n        }});\r\n\r\n        console.log(`SN: Instance ${this.instanceId} has been initialized.`);\r\n    }\r\n\r\n    destroy() {\r\n        console.log(\"SN: Running .destroy()...\");\r\n\r\n        if (!this.instanceId) {\r\n            throw new Error(\"SN: Instance isn't initialized!\");\r\n        }\r\n\r\n        if (this.runningDestroy) {\r\n            console.log(\"SN: .destroy was called whilst already running. Returning.\");\r\n\r\n            return;\r\n        }\r\n\r\n        this.runningDestroy = true;\r\n\r\n        this.nodes.wrapper.addEventListener(\"allNotificationsDestroyed\", (e) => {\r\n            console.log(\"SN: All notifications have been destroyed.\");\r\n\r\n            this.nodes.wrapper.remove();\r\n\r\n            if (this.onlyOne) {\r\n                this.onlyOne.states = {};\r\n                this.onlyOne.nextMsgData = {};\r\n            }\r\n\r\n            this.events = {};\r\n\r\n            this.nId = 1;\r\n\r\n            this.instanceId = null;\r\n\r\n            delete this.runningDestroy;\r\n\r\n            console.log(`SN: Instance ${e.detail.instanceId} has been destroyed.`);\r\n        });\r\n\r\n        this.hide();\r\n    }\r\n\r\n    show(text, type) {\r\n        console.log(\"SN: Running .show()...\");\r\n\r\n        if (!this.instanceId) {\r\n            throw new Error(\"SN: Instance isn't initialized!\");\r\n        }\r\n\r\n        if (this.onlyOne.set) {\r\n            if (this.onlyOne.states.inReshow) {\r\n                console.log(\"SN: onlyOneNotification === true and .show() was called during execution ._reshowNotification(). Returning.\");\r\n\r\n                return;\r\n            }\r\n\r\n            if (this.onlyOne.states.isVisible) {\r\n                console.log(\"SN: onlyOneNotification === true and notification is currently visible. Calling ._reshowNotification()...\");\r\n\r\n                this._reshowNotification(text, type);\r\n\r\n                return;\r\n            }\r\n        }\r\n\r\n        let nId = this.nId;\r\n\r\n        if (!this.onlyOne.set) {\r\n            this.nId++;\r\n        }\r\n\r\n        this._initNotification(nId);\r\n\r\n        this._getMsgData(nId, text, type);\r\n\r\n        this._showNewNotification(nId);\r\n    }\r\n\r\n    _initNotification(nId) {\r\n        console.log(`SN: Running ._initNotification() on nId ${nId}...`);\r\n\r\n        this.nodes[nId] = {};\r\n\r\n        for (const [role, values] of Object.entries(SN.nodeSkeletons)) {\r\n            if (role === \"wrapper\")\r\n                continue;\r\n\r\n            this.nodes[nId][role] = createEl(values.tagName, values.attrs);\r\n\r\n            if (role === \"notification\") {\r\n                this.nodes.wrapper.insertBefore(\r\n                    this.nodes[nId][role],\r\n                    this.nodes.wrapper.firstElementChild\r\n                );\r\n            } else {\r\n                this.nodes[nId].notification.append(this.nodes[nId][role]);\r\n            }\r\n        }\r\n\r\n        this.nodes[nId].notification.dataset.notificationId = nId;\r\n\r\n        this.timeoutIds[nId] = {};\r\n\r\n        this.events[nId] = {};\r\n\r\n        this.events[nId].shown = new CustomEvent(\"notificationShown\", { detail: {\r\n            instanceId: this.instanceId,\r\n            notificationId: nId\r\n        }});\r\n        this.events[nId].destroyed = new CustomEvent(\"notificationDestroyed\", { detail: {\r\n            instanceId: this.instanceId,\r\n            notificationId: nId\r\n        }});\r\n\r\n        this.nodes.wrapper.addEventListener(\r\n            \"notificationShown\",\r\n            this.events[nId].shown,\r\n            { once: true }\r\n        );\r\n        this.nodes.wrapper.addEventListener(\r\n            \"notificationDestroyed\",\r\n            this.events[nId].destroyed,\r\n            { once: true }\r\n        );\r\n    }\r\n\r\n    _getMsgData(nId, text, type) {\r\n        console.log(`SN: Running ._getMsgData on nId ${nId}...`);\r\n\r\n        if (!text) {\r\n            if (this.onlyOne.nextMsgData) {\r\n                text = this.onlyOne.nextMsgData.text;\r\n                type = this.onlyOne.nextMsgData.type;\r\n\r\n                this.onlyOne.nextMsgData = {};\r\n            } else {\r\n                text = SN.defaultMsgData.notext.text;\r\n                type = SN.defaultMsgData.notext.type;\r\n            }\r\n        }\r\n\r\n        if (!type) {\r\n            type = SN.defaultMsgData.notype.type;\r\n        }\r\n\r\n        this.msgData[nId] = {};\r\n\r\n        this.msgData[nId].text = text;\r\n        this.msgData[nId].type = type;\r\n    }\r\n\r\n    _showNewNotification(nId) {\r\n        console.log(`SN: Running ._showNewNotification() on nId ${nId}...`);\r\n\r\n        this.animatedRun = this.animated;\r\n\r\n        this.nodes[nId].message.textContent = this.msgData[nId].text;\r\n\r\n        this.nodes[nId].notification.classList.add(\r\n            `${SN.nodeClasses.notification}--${this.msgData[nId].type}`,\r\n               SN.nodeClasses.shown\r\n        );\r\n\r\n        if (this.animatedRun) {\r\n            this.nodes[nId].notification.classList.add(\r\n                SN.nodeClasses.anim.base,\r\n                SN.nodeClasses.anim.show\r\n            );\r\n\r\n            const animTimeout = timeToMs(getPropValue(\r\n                this.nodes[nId].notification,\r\n                \"animation-duration\"\r\n            ));\r\n\r\n            this.timeoutIds[nId].showAnim = setTimeout(() => {\r\n                this.nodes[nId].notification.classList.remove(SN.nodeClasses.anim.show);\r\n            }, animTimeout);\r\n        }\r\n\r\n        if (this.onlyOne.set) {\r\n            this.onlyOne.states.isVisible = true;\r\n        }\r\n\r\n        this.nodes.wrapper.dispatchEvent(this.events[nId].shown);\r\n\r\n        if (this.hideCallTimeout > 0) {\r\n            this.timeoutIds[nId].hideCall = setTimeout(() => {\r\n                this.hide(nId);\r\n            }, this.hideCallTimeout);\r\n        } else {\r\n            this.animatedRun = null;\r\n        }\r\n    }\r\n\r\n    _reshowNotification(text, type) {\r\n        console.log(\"SN: Running ._reshowNotification()...\");\r\n\r\n        this.onlyOne.states.inReshow = true;\r\n\r\n        this.onlyOne.nextMsgData.text = text;\r\n        this.onlyOne.nextMsgData.type = type;\r\n\r\n        clearTimeout(this.timeoutIds[1].hideCall);\r\n\r\n        this.hide(1);\r\n    }\r\n\r\n    hide(nId) {\r\n        console.log(\"SN: Running .hide()...\");\r\n\r\n        if (!this.instanceId) {\r\n            throw new Error(\"SN: Instance isn't initialized!\");\r\n        }\r\n\r\n        if (this.onlyOne.set) {\r\n            if (this.onlyOne.states.inHide) {\r\n                console.log(\"SN: onlyOneNotification === true and .hide() was called whilst already running. Returning.\");\r\n\r\n                return;\r\n            }\r\n\r\n            this.onlyOne.states.inHide = true;\r\n        }\r\n\r\n        let nIdsArray;\r\n\r\n        if (typeof nId === \"number\") {\r\n            if (this.msgData[nId] === \"undefined\") {\r\n                console.warn(`SN: .hide() was called on a non-existant notification. Returning!`);\r\n\r\n                return;\r\n            }\r\n\r\n            nIdsArray = [nId];\r\n        }\r\n\r\n        if (typeof nId === \"undefined\") {\r\n            nIdsArray = Object.keys(this.msgData);\r\n\r\n            if (nIdsArray.length > 0) {\r\n                console.log(this.timeoutIds);\r\n\r\n                Object.values(this.timeoutIds).forEach((nTimeoutIds) => {\r\n                    Object.values(nTimeoutIds).forEach((timeoutId) => {\r\n                        clearTimeout(timeoutId);\r\n                    });\r\n                });\r\n            } else if (this.runningDestroy) {\r\n                this.nodes.wrapper.dispatchEvent(this.events.allDestroyed);\r\n            } else {\r\n                console.warn(\"SN: .hide() was called, but no notification is currently shown. Returning!\");\r\n\r\n                return;\r\n            }\r\n        }\r\n\r\n        let i = 1;\r\n\r\n        nIdsArray.forEach((id) => {\r\n            this._hideNotification(id);\r\n\r\n            i++;\r\n\r\n            if (this.onlyOne.set && i > nIdsArray.length) {\r\n                this.onlyOne.states.inHide = false;\r\n            }\r\n        });\r\n    }\r\n\r\n    _hideNotification(nId) {\r\n        console.log(`SN: Running ._hideNotification() on nId ${nId}...`);\r\n\r\n        if (this.animatedRun === null) {\r\n            this.animatedRun = this.animated;\r\n        }\r\n\r\n        let animTimeout = 0;\r\n\r\n        if (this.animatedRun) {\r\n            this.nodes[nId].notification.classList.add(SN.nodeClasses.anim.hide);\r\n\r\n            animTimeout = timeToMs(getPropValue(\r\n                this.nodes[nId].notification,\r\n                \"animation-duration\"\r\n            ));\r\n        }\r\n\r\n        this.timeoutIds[nId].hideAnim = setTimeout(() => {\r\n            this.nodes[nId].notification.classList.remove(SN.nodeClasses.shown);\r\n            this.nodes[nId].notification.className =\r\n                this.nodes[nId].notification.className.replace(SN.nodeClasses.typeRegex, \"\");\r\n\r\n            if (this.animatedRun) {\r\n                this.nodes[nId].notification.classList.remove(SN.nodeClasses.anim.hide);\r\n            }\r\n\r\n            if (this.onlyOne.set) {\r\n                this.onlyOne.states.isVisible = false;\r\n            }\r\n\r\n            this._destroyNotification(nId);\r\n        }, animTimeout);\r\n    }\r\n\r\n    _destroyNotification(nId) {\r\n        console.log(`SN: Running ._destroyNotification() on nId ${nId}...`);\r\n\r\n        const nodesArrayKeys = Object.keys(this.nodes[nId]);\r\n        const nodesArrayValues = Object.values(this.nodes[nId]);\r\n\r\n        new Promise((resolve) => {\r\n            let nodeKey = 0;\r\n\r\n            nodesArrayValues.forEach((node) => {\r\n                node.remove();\r\n\r\n                nodeKey++;\r\n\r\n                if (nodeKey === nodesArrayKeys.length) {\r\n                    resolve(\"All nodes have been removed succesfully.\");\r\n                }\r\n            });\r\n        })\r\n            .then(() => {\r\n                this.animatedRun = null;\r\n\r\n                delete this.nodes[nId];\r\n                delete this.msgData[nId];\r\n                delete this.timeoutIds[nId];\r\n\r\n                this.nodes.wrapper.dispatchEvent(this.events[nId].destroyed);\r\n\r\n                delete this.events[nId];\r\n\r\n                console.log(`SN: Notification ${nId} has succesfully been destroyed.`);\r\n\r\n                if (Object.keys(this.msgData).length === 0) {\r\n                    this.nodes.wrapper.dispatchEvent(this.events.allDestroyed);\r\n                }\r\n\r\n                if (this.onlyOne.set && this.onlyOne.states.inReshow) {\r\n                    this.onlyOne.states.inReshow = false;\r\n\r\n                    this.show();\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                throw new Error(error);\r\n            });\r\n    }\r\n}\r\n\r\nexport default SN;\r\n"]}