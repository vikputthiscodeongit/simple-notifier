{"version":3,"file":"simple-notifier.js","mappings":"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","sources":["webpack:///../../node_modules/css-duration/index.js","webpack:///../../node_modules/css-get-unit/index.js","webpack:///webpack/bootstrap","webpack:///../../node_modules/@codebundlesbyvik/element-operations/createEl.js","webpack:///../../node_modules/@codebundlesbyvik/string-operations/index.js","webpack:///../../node_modules/@codebundlesbyvik/element-operations/getElCssValue.js","webpack:///./index.js","webpack:///../../node_modules/@codebundlesbyvik/css-media-functions/index.js","webpack:///../../node_modules/@codebundlesbyvik/number-operations/index.js"],"sourcesContent":["var unit = require('css-get-unit')\n\nmodule.exports = duration\n\n/**\n * Normalize duration value into milliseconds.\n */\nfunction duration (time) {\n  var number = parseFloat(time)\n  switch (unit(time)) {\n    case null:\n    case 'ms': return number\n    case 's': return number * 1000\n    case 'm': return number * 60000\n    case 'h': return number * 3600000\n    case 'd': return number * 86400000\n    case 'w': return number * 604800000\n    default: return null\n  }\n}\n","module.exports = function unit (value) {\n\n  var len = value.length\n  if (!value || !len)\n    return null\n\t\t\n  var i = len\n  while (i--)\n    if (!isNaN(value[i]))\n      return value.slice(i + 1, len) || null\n\n  return null\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","import camelToKebab from \"@codebundlesbyvik/string-operations\";\r\n\r\n// Create an Element\r\nexport default function createEl(tagName, attrs) {\r\n    const el = document.createElement(tagName);\r\n\r\n    if (attrs) {\r\n        for (const [prop, val] of Object.entries(attrs)) {\r\n            el.setAttribute(camelToKebab(prop), val);\r\n        }\r\n    }\r\n\r\n    return el;\r\n}\r\n","// Convert string in camelCase to kebab-case\r\nexport default function camelToKebab(string) {\r\n    return string.replace(/[A-Z]/g, letter => `-${letter.toLowerCase()}`);\r\n}\r\n","// Get an Element property's value\r\nexport default function getElCssValue(el, prop) {\r\n    const elStyles = window.getComputedStyle(el);\r\n\r\n    return elStyles.getPropertyValue(prop);\r\n}\r\n","import * as cssTimeToMs from \"css-duration\";\nimport motionAllowed from \"@codebundlesbyvik/css-media-functions\";\nimport { createEl, getElCssValue } from \"@codebundlesbyvik/element-operations\";\nimport getRandomIntUnder from \"@codebundlesbyvik/number-operations\";\n\nconst defaultOptions = {\n    autoHide: true,            // Number / Boolean\n    onlyOneNotification: true, // Boolean\n    parentEl: document.body,   // Element\n    position: \"top center\",    // String\n    animations: \"auto\"         // String / Boolean\n};\n\nclass SN {\n    constructor(userOptions = {}) {\n        this.mergedOptions = Object.assign(defaultOptions, userOptions);\n\n        this.autoHide = this.mergedOptions.autoHide;\n        this.parentEl = this.mergedOptions.parentEl;\n        this.position = this.mergedOptions.position;\n        this.motionPref = this.mergedOptions.animations;\n\n        this.instanceId = null;\n\n        this.nId = 1;\n        this.nodes = {};\n        this.msgData = {};\n\n        this.timeoutIds = {};\n        this.events = {};\n        this.onlyOne = {\n            set: this.mergedOptions.onlyOneNotification,\n            states: {},\n            nextMsgData: {}\n        };\n\n        this.animatedRun = null;\n    }\n\n    static nodeClasses = {\n        wrapper: \"simple-notifier\",\n        notification: \"simple-notification\",\n        typeRegex: /simple-notification--[A-Za-z]+/g,\n        shown: \"is-shown\",\n        anim: {\n            base: \"animated\",\n            show: \"fadeIn\",\n            hide: \"fadeOut\"\n        }\n    }\n\n    static nodeSkeletons = {\n        wrapper: {\n            tagName: \"div\",\n            attrs: {\n                class: SN.nodeClasses.wrapper\n            }\n        },\n        notification: {\n            tagName: \"div\",\n            attrs: {\n                class: SN.nodeClasses.notification,\n                role: \"alert\"\n            }\n        },\n        message: {\n            tagName: \"p\",\n            attrs: {\n                class: `${SN.nodeClasses.notification}__message`\n            }\n        }\n    };\n\n    static defaultMsgData = {\n        notext: {\n            text: \"This is some dummy text for you, because none was passed in.\",\n            type: \"debug\"\n        },\n        notype: {\n            type: \"default\"\n        }\n    };\n\n    get animated() {\n        switch(this.motionPref) {\n            case \"undefined\":\n            case \"auto\":\n                return motionAllowed();\n            default:\n                return this.motionPref;\n        }\n    }\n\n    get hideCallTimeout() {\n        switch(this.autoHide) {\n            case true:\n                return 3500;\n            case false:\n                return 0;\n            default:\n                return this.autoHide;\n        }\n    }\n\n    _eventCallbackShown(e) {\n        console.log(`SN: notificationShown event dispatched by notification ${e.detail.id}.`);\n    }\n\n    _eventCallbackDestroyed(e) {\n        console.log(`SN: notificationDestroyed event dispatched by notification ${e.detail.id}.`);\n    }\n\n    init() {\n        console.log(\"SN: Running .init()...\");\n\n        if (this.instanceId) {\n            throw new Error(\"SN: .init() has already been called on this instance.\");\n        }\n\n        this.instanceId = getRandomIntUnder(1000);\n\n        const wrapperEl = createEl(\n            SN.nodeSkeletons.wrapper.tagName,\n            SN.nodeSkeletons.wrapper.attrs\n        );\n\n        this.parentEl.insertBefore(wrapperEl, this.parentEl.firstElementChild);\n\n        this.nodes.wrapper = wrapperEl;\n\n        const screenPosArray = this.position.split(\" \");\n\n        // If only a y-position is set by the user, add an x-position.\n        if (screenPosArray.length === 1) {\n            screenPosArray[1] = \"center\";\n        }\n\n        this.nodes.wrapper.classList.add(\n            `${SN.nodeClasses.wrapper}--pos-y-${screenPosArray[0]}`,\n            `${SN.nodeClasses.wrapper}--pos-x-${screenPosArray[1]}`\n        );\n    }\n\n    show(text, type) {\n        console.log(\"SN: Running .show()...\");\n\n        if (!this.instanceId) {\n            throw new Error(\"SN: .init() must be called at least once before usage!\");\n        }\n\n        if (this.onlyOne.set) {\n            if (\n                this.onlyOne.states.inShow || this.onlyOne.states.inShowNew ||\n                this.onlyOne.states.inReshow || this.onlyOne.states.inHide\n            ) {\n                console.log(\"SN: onlyOneNotification === true and .show() was called during execution of .show(), ._showNewNotification(), ._reshowNotification() or .hide(). Returning.\");\n\n                return;\n            }\n\n            if (this.onlyOne.states.isVisible) {\n                console.log(\"SN: onlyOneNotification === true and notification is currently visible. Calling ._reshowNotification()...\");\n\n                this._reshowNotification(text, type);\n\n                return;\n            }\n\n            this.onlyOne.states.inShow = true;\n        }\n\n        let nId = this.nId;\n\n        if (!this.onlyOne.set) {\n            this.nId++;\n        }\n\n        this._initNotification(nId);\n\n        this._getMsgData(nId, text, type);\n\n        this._showNewNotification(nId);\n\n        if (this.onlyOne.set) {\n            this.onlyOne.states.inShow = false;\n        }\n    }\n\n    _initNotification(nId) {\n        console.log(`SN: Running ._initNotification() on nId ${nId}...`);\n\n        // Nodes\n        this.nodes[nId] = {};\n\n        for (const [role, values] of Object.entries(SN.nodeSkeletons)) {\n            if (role === \"wrapper\")\n                continue;\n\n            const el = createEl(values.tagName, values.attrs);\n\n            this.nodes[nId][role] = el;\n\n            if (role === \"notification\") {\n                this.nodes.wrapper.insertBefore(el, this.nodes.wrapper.firstElementChild);\n            } else {\n                this.nodes[nId].notification.append(el);\n            }\n        }\n\n        // Timeouts\n        this.timeoutIds[nId] = {};\n\n        // Events\n        this.events[nId] = {};\n\n        this.events[nId].shown =\n            new CustomEvent(\"notificationShown\", { detail: { id: nId } });\n        this.events[nId].destroyed =\n            new CustomEvent(\"notificationDestroyed\", { detail: { id: nId } });\n\n        this.events[nId].shown.cbBound = this._eventCallbackShown.bind(this);\n        this.events[nId].destroyed.cbBound = this._eventCallbackDestroyed.bind(this);\n\n        this.nodes.wrapper\n            .addEventListener(\"notificationShown\", this.events[nId].shown.cbBound);\n        this.nodes.wrapper\n            .addEventListener(\"notificationDestroyed\", this.events[nId].destroyed.cbBound);\n    }\n\n    _getMsgData(nId, text, type) {\n        console.log(`SN: Running ._getMsgData on nId ${nId}...`);\n\n        if (!text) {\n            if (this.onlyOne.nextMsgData) {\n                text = this.onlyOne.nextMsgData.text;\n                type = this.onlyOne.nextMsgData.type;\n\n                this.onlyOne.nextMsgData = {};\n            } else {\n                text = SN.defaultMsgData.notext.text;\n                type = SN.defaultMsgData.notext.type;\n            }\n        }\n\n        if (!type) {\n            type = SN.defaultMsgData.notype.type;\n        }\n\n        this.msgData[nId] = {};\n\n        this.msgData[nId].text = text;\n        this.msgData[nId].type = type;\n    }\n\n    _showNewNotification(nId) {\n        console.log(`SN: Running ._showNewNotification() on nId ${nId}...`);\n\n        if (this.onlyOne.set) {\n            this.onlyOne.states.inShowNew = true;\n        }\n\n        this.animatedRun = this.animated;\n\n        this.nodes[nId].message.textContent = this.msgData[nId].text;\n\n        this.nodes[nId].notification.classList.add(\n            `${SN.nodeClasses.notification}--${this.msgData[nId].type}`,\n               SN.nodeClasses.shown\n        );\n\n        if (this.onlyOne.set) {\n            this.onlyOne.states.isVisible = true;\n        }\n\n        if (this.animatedRun) {\n            this.nodes[nId].notification.classList.add(\n                SN.nodeClasses.anim.base,\n                SN.nodeClasses.anim.show\n            );\n\n            const animTimeout = cssTimeToMs(getElCssValue(\n                this.nodes[nId].notification,\n                \"animation-duration\"\n            ));\n\n            this.timeoutIds[nId].showAnim = setTimeout(() => {\n                this.nodes[nId].notification.classList.remove(SN.nodeClasses.anim.show);\n\n                this.timeoutIds[nId].showAnim = null;\n            }, animTimeout);\n        }\n\n        this.nodes.wrapper.dispatchEvent(this.events[nId].shown);\n\n        this.nodes.wrapper\n            .removeEventListener(\"notificationShown\", this.events[nId].shown.cbBound);\n        delete this.events[nId].shown;\n\n        if (this.hideCallTimeout > 0) {\n            this.timeoutIds[nId].hideCall = setTimeout(() => {\n                this.hide(nId);\n\n                this.timeoutIds[nId].hideCall = null;\n            }, this.hideCallTimeout);\n        } else {\n            this.animatedRun = null;\n        }\n\n        if (this.onlyOne.set) {\n            this.onlyOne.states.inShowNew = false;\n        }\n    }\n\n    _reshowNotification(text, type) {\n        console.log(\"SN: Running ._reshowNotification()...\");\n\n        this.onlyOne.states.inReshow = true;\n\n        this.onlyOne.nextMsgData.text = text;\n        this.onlyOne.nextMsgData.type = type;\n\n        clearTimeout(this.timeoutIds[1].hideCall);\n        this.timeoutIds[1].hideCall = null;\n\n        this.hide(1);\n    }\n\n    hide(nId) {\n        console.log(`SN: Running .hide() on nId ${nId}...`);\n\n        if (this.onlyOne.set) {\n            if (this.onlyOne.states.inHide) {\n                console.log(\"SN: onlyOneNotification === true and .hide() was called whilst already running. Returning.\");\n\n                return;\n            }\n\n            this.onlyOne.states.inHide = true;\n        }\n\n        let nIdsArray;\n\n        if (typeof nId === \"number\") {\n            if (this.msgData[nId] === \"undefined\") {\n                console.warn(`SN: .hide() was called on a non-existant notification. Returning!`);\n\n                return;\n            }\n\n            nIdsArray = [nId];\n        }\n\n        if (typeof nId === \"undefined\") {\n            nIdsArray = Object.keys(this.msgData);\n\n            if (nIdsArray.length === 0) {\n                console.warn(\"SN: .hide() was called, but no notification is currently shown. Returning!\");\n\n                return;\n            }\n        }\n\n        let i = 1;\n\n        nIdsArray.forEach((id) => {\n            this._hideNotification(id);\n\n            i++;\n\n            if (this.onlyOne.set && i > nIdsArray.length) {\n                this.onlyOne.states.inHide = false;\n            }\n        });\n    }\n\n    _hideNotification(nId) {\n        console.log(`SN: Running ._hideNotification() on nId ${nId}...`);\n\n        if (this.animatedRun === null) {\n            this.animatedRun = this.animated;\n        }\n\n        let animTimeout = 0;\n\n        if (this.animatedRun) {\n            this.nodes[nId].notification.classList.add(SN.nodeClasses.anim.hide);\n\n            animTimeout = cssTimeToMs(getElCssValue(\n                this.nodes[nId].notification,\n                \"animation-duration\"\n            ));\n        }\n\n        this.timeoutIds[nId].hideAnim = setTimeout(() => {\n            this.nodes[nId].notification.classList.remove(SN.nodeClasses.shown);\n            this.nodes[nId].notification.className =\n                this.nodes[nId].notification.className.replace(SN.nodeClasses.typeRegex, \"\");\n\n            if (this.animatedRun) {\n                this.nodes[nId].notification.classList.remove(SN.nodeClasses.anim.hide);\n            }\n\n            if (this.onlyOne.set) {\n                this.onlyOne.states.isVisible = false;\n            }\n\n            this._destroyNotification(nId);\n        }, animTimeout);\n    }\n\n    _destroyNotification(nId) {\n        console.log(`SN: Running ._destroyNotification() on nId ${nId}...`);\n\n        const nodesArrayKeys = Object.keys(this.nodes[nId]);\n        const nodesArrayValues = Object.values(this.nodes[nId]);\n\n        new Promise((resolve) => {\n            let nodeKey = 0;\n\n            nodesArrayValues.forEach((node) => {\n                node.remove();\n\n                nodeKey++;\n\n                if (nodeKey === nodesArrayKeys.length) {\n                    resolve(\"All nodes were removed succesfully.\");\n                }\n            });\n        })\n            .then(() => {\n                this.nodes.wrapper.dispatchEvent(this.events[nId].destroyed);\n\n                this.nodes.wrapper.removeEventListener(\n                    \"notificationDestroyed\",\n                    this.events[nId].destroyed.cbBound\n                );\n                delete this.events[nId];\n\n                delete this.nodes[nId];\n                delete this.msgData[nId];\n\n                this.animatedRun = null;\n\n                this.timeoutIds[nId].hideAnim = null;\n\n                console.log(`SN: Notification ${nId} has succesfully been destroyed.`);\n\n                if (this.onlyOne.set && this.onlyOne.states.inReshow) {\n                    this.onlyOne.states.inReshow = false;\n\n                    this.show();\n                }\n            })\n            .catch((error) => {\n                throw new Error(error);\n            });\n    }\n}\n\nexport default SN;\n","// Check if 'prefers-reduced-motion' ISN'T set to 'reduce'\r\nexport default function motionAllowed() {\r\n    return !window.matchMedia(\"(prefers-reduced-motion: reduce)\").matches;\r\n}\r\n","// Get a random integer under a given number.\r\nexport default function getRandomIntUnder(max, includeMax) {\r\n    const int = includeMax === true ? 0 : 1;\r\n\r\n    return Math.floor(Math.random() * (max - int));\r\n}\r\n"],"names":["unit","require","module","exports","time","number","parseFloat","value","len","length","i","isNaN","slice","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","createEl","tagName","attrs","el","document","createElement","prop","val","Object","entries","setAttribute","replace","letter","toLowerCase","getElCssValue","window","getComputedStyle","getPropertyValue","defaultOptions","autoHide","onlyOneNotification","parentEl","body","position","animations","SN","constructor","userOptions","this","mergedOptions","assign","motionPref","instanceId","nId","nodes","msgData","timeoutIds","events","onlyOne","set","states","nextMsgData","animatedRun","animated","matchMedia","matches","hideCallTimeout","_eventCallbackShown","e","_eventCallbackDestroyed","init","Error","Math","floor","random","wrapperEl","nodeSkeletons","wrapper","insertBefore","firstElementChild","screenPosArray","split","classList","add","nodeClasses","show","text","type","inShow","inShowNew","inReshow","inHide","isVisible","_reshowNotification","_initNotification","_getMsgData","_showNewNotification","role","values","notification","append","shown","CustomEvent","detail","id","destroyed","cbBound","bind","addEventListener","defaultMsgData","notext","notype","message","textContent","anim","base","animTimeout","cssTimeToMs","showAnim","setTimeout","remove","dispatchEvent","removeEventListener","hideCall","hide","clearTimeout","nIdsArray","keys","forEach","_hideNotification","hideAnim","className","typeRegex","_destroyNotification","nodesArrayKeys","nodesArrayValues","Promise","resolve","nodeKey","node","then","catch","error","class"],"sourceRoot":""}