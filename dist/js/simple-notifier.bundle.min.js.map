{"version":3,"sources":["../../node_modules/merge-options/index.js","../../node_modules/is-plain-obj/index.js","../../node_modules/@codebundlesbyvik/css-operations/getPropValue.js","../../node_modules/@codebundlesbyvik/css-operations/timeToMs.js","../../node_modules/@codebundlesbyvik/css-operations/getUnit.js","../../node_modules/@codebundlesbyvik/element-operations/index.js","../../src/js/index.js","../../node_modules/@codebundlesbyvik/css-operations/mediaMotion.js","../../node_modules/@codebundlesbyvik/number-operations/index.js"],"names":["isOptionObject","value","Object","prototype","toString","call","getPrototypeOf","hasOwnProperty","propertyIsEnumerable","defineProperty","object","name","writable","enumerable","configurable","globalThis","this","defaultMergeOptions","concatArrays","ignoreUndefined","getEnumerableOwnPropertyKeys","keys","key","push","getOwnPropertySymbols","symbols","symbol","clone","Array","isArray","array","result","slice","forEach","cloneArray","create","cloneOptionObject","mergeKeys","merged","source","config","merge","resultIndex","indices","k","length","String","filter","includes","getPropValue","el","prop","propValue","window","getComputedStyle","getPropertyValue","timeToMs","time","number","parseFloat","getUnit","i","isNaN","createEl","tagName","attrs","document","createElement","val","entries","replace","letter","toLowerCase","setAttribute","defaultOptions","autoHide","onlyOneNotification","parentEl","body","position","animations","SN","constructor","userOptions","mergedOptions","options","_","option","undefined","TypeError","mergeOptions","motionPref","instanceId","nId","nodes","msgData","timeoutIds","events","onlyOne","set","states","nextMsgData","animatedRun","animated","matchMedia","matches","hideCallTimeout","init","Error","Math","floor","random","wrapper","nodeSkeletons","dataset","parentElFChild","firstElementChild","siblingEl","classList","contains","nextElementSibling","insertBefore","screenPosArray","split","add","nodeClasses","allDestroyed","CustomEvent","detail","destroy","runningDestroy","addEventListener","e","remove","hide","show","text","type","inReshow","isVisible","_reshowNotification","_initNotification","_getMsgData","_showNewNotification","role","values","notification","append","notificationId","shown","destroyed","once","defaultMsgData","notext","notype","message","textContent","anim","base","animTimeout","showAnim","setTimeout","dispatchEvent","hideCall","clearTimeout","inHide","nIdsArray","nTimeoutIds","timeoutId","id","_hideNotification","hideAnim","className","typeRegex","_destroyNotification","nodesArrayKeys","nodesArrayValues","Promise","resolve","nodeKey","node","then","catch","error","class"],"mappings":"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","sourcesContent":["'use strict';\nconst isOptionObject = require('is-plain-obj');\n\nconst {hasOwnProperty} = Object.prototype;\nconst {propertyIsEnumerable} = Object;\nconst defineProperty = (object, name, value) => Object.defineProperty(object, name, {\n\tvalue,\n\twritable: true,\n\tenumerable: true,\n\tconfigurable: true\n});\n\nconst globalThis = this;\nconst defaultMergeOptions = {\n\tconcatArrays: false,\n\tignoreUndefined: false\n};\n\nconst getEnumerableOwnPropertyKeys = value => {\n\tconst keys = [];\n\n\tfor (const key in value) {\n\t\tif (hasOwnProperty.call(value, key)) {\n\t\t\tkeys.push(key);\n\t\t}\n\t}\n\n\t/* istanbul ignore else  */\n\tif (Object.getOwnPropertySymbols) {\n\t\tconst symbols = Object.getOwnPropertySymbols(value);\n\n\t\tfor (const symbol of symbols) {\n\t\t\tif (propertyIsEnumerable.call(value, symbol)) {\n\t\t\t\tkeys.push(symbol);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn keys;\n};\n\nfunction clone(value) {\n\tif (Array.isArray(value)) {\n\t\treturn cloneArray(value);\n\t}\n\n\tif (isOptionObject(value)) {\n\t\treturn cloneOptionObject(value);\n\t}\n\n\treturn value;\n}\n\nfunction cloneArray(array) {\n\tconst result = array.slice(0, 0);\n\n\tgetEnumerableOwnPropertyKeys(array).forEach(key => {\n\t\tdefineProperty(result, key, clone(array[key]));\n\t});\n\n\treturn result;\n}\n\nfunction cloneOptionObject(object) {\n\tconst result = Object.getPrototypeOf(object) === null ? Object.create(null) : {};\n\n\tgetEnumerableOwnPropertyKeys(object).forEach(key => {\n\t\tdefineProperty(result, key, clone(object[key]));\n\t});\n\n\treturn result;\n}\n\n/**\n * @param {*} merged already cloned\n * @param {*} source something to merge\n * @param {string[]} keys keys to merge\n * @param {Object} config Config Object\n * @returns {*} cloned Object\n */\nconst mergeKeys = (merged, source, keys, config) => {\n\tkeys.forEach(key => {\n\t\tif (typeof source[key] === 'undefined' && config.ignoreUndefined) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Do not recurse into prototype chain of merged\n\t\tif (key in merged && merged[key] !== Object.getPrototypeOf(merged)) {\n\t\t\tdefineProperty(merged, key, merge(merged[key], source[key], config));\n\t\t} else {\n\t\t\tdefineProperty(merged, key, clone(source[key]));\n\t\t}\n\t});\n\n\treturn merged;\n};\n\n/**\n * @param {*} merged already cloned\n * @param {*} source something to merge\n * @param {Object} config Config Object\n * @returns {*} cloned Object\n *\n * see [Array.prototype.concat ( ...arguments )](http://www.ecma-international.org/ecma-262/6.0/#sec-array.prototype.concat)\n */\nconst concatArrays = (merged, source, config) => {\n\tlet result = merged.slice(0, 0);\n\tlet resultIndex = 0;\n\n\t[merged, source].forEach(array => {\n\t\tconst indices = [];\n\n\t\t// `result.concat(array)` with cloning\n\t\tfor (let k = 0; k < array.length; k++) {\n\t\t\tif (!hasOwnProperty.call(array, k)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tindices.push(String(k));\n\n\t\t\tif (array === merged) {\n\t\t\t\t// Already cloned\n\t\t\t\tdefineProperty(result, resultIndex++, array[k]);\n\t\t\t} else {\n\t\t\t\tdefineProperty(result, resultIndex++, clone(array[k]));\n\t\t\t}\n\t\t}\n\n\t\t// Merge non-index keys\n\t\tresult = mergeKeys(result, array, getEnumerableOwnPropertyKeys(array).filter(key => !indices.includes(key)), config);\n\t});\n\n\treturn result;\n};\n\n/**\n * @param {*} merged already cloned\n * @param {*} source something to merge\n * @param {Object} config Config Object\n * @returns {*} cloned Object\n */\nfunction merge(merged, source, config) {\n\tif (config.concatArrays && Array.isArray(merged) && Array.isArray(source)) {\n\t\treturn concatArrays(merged, source, config);\n\t}\n\n\tif (!isOptionObject(source) || !isOptionObject(merged)) {\n\t\treturn clone(source);\n\t}\n\n\treturn mergeKeys(merged, source, getEnumerableOwnPropertyKeys(source), config);\n}\n\nmodule.exports = function (...options) {\n\tconst config = merge(clone(defaultMergeOptions), (this !== globalThis && this) || {}, defaultMergeOptions);\n\tlet merged = {_: {}};\n\n\tfor (const option of options) {\n\t\tif (option === undefined) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (!isOptionObject(option)) {\n\t\t\tthrow new TypeError('`' + option + '` is not an Option Object');\n\t\t}\n\n\t\tmerged = merge(merged, {_: option}, config);\n\t}\n\n\treturn merged._;\n};\n","'use strict';\n\nmodule.exports = value => {\n\tif (Object.prototype.toString.call(value) !== '[object Object]') {\n\t\treturn false;\n\t}\n\n\tconst prototype = Object.getPrototypeOf(value);\n\treturn prototype === null || prototype === Object.prototype;\n};\n","export default function getPropValue(el, prop) {\r\n    const elStyles = window.getComputedStyle(el);\r\n    const propValue = elStyles.getPropertyValue(prop)\r\n\r\n    return propValue === \"\" ? null : propValue;\r\n}\r\n","import getUnit from \"./getUnit.js\";\r\n\r\nexport default function timeToMs(time) {\r\n    const number = parseFloat(time);\r\n\r\n    switch (getUnit(time)) {\r\n        case null:\r\n        case \"ms\":\r\n            return number;\r\n\r\n        case \"s\":\r\n            return number * 1000;\r\n\r\n        case \"m\":\r\n            return number * 60000;\r\n\r\n        case \"h\":\r\n            return number * 3600000;\r\n\r\n        case \"d\":\r\n            return number * 86400000;\r\n\r\n        case \"w\":\r\n            return number * 604800000;\r\n\r\n        case \"y\":\r\n            return number * 31536000000;\r\n\r\n        default:\r\n            return null;\r\n    }\r\n}\r\n","export default function getUnit(value) {\r\n    let length = value.length;\r\n\r\n    if (!value || !length) {\r\n        return null;\r\n    }\r\n\r\n    let i = length;\r\n\r\n    while (i--) {\r\n        if (!isNaN(value[i])) {\r\n            return value.slice(i + 1, length) || null;\r\n        }\r\n    }\r\n\r\n    return null;\r\n}\r\n","export default function createEl(tagName, attrs) {\r\n    const el = document.createElement(tagName);\r\n\r\n    if (attrs) {\r\n        for (let [prop, val] of Object.entries(attrs)) {\r\n            prop = prop.replace(/[A-Z0-9]/g, letter => `-${letter.toLowerCase()}`);\r\n\r\n            el.setAttribute(prop, val);\r\n        }\r\n    }\r\n\r\n    return el;\r\n}\r\n","const mergeOptions = require(\"merge-options\");\r\nimport { getPropValue, motionAllowed, timeToMs } from \"@codebundlesbyvik/css-operations\";\r\nimport createEl from \"@codebundlesbyvik/element-operations\";\r\nimport getRandomIntUnder from \"@codebundlesbyvik/number-operations\";\r\n\r\nconst defaultOptions = {\r\n    autoHide: true,            // Number / Boolean\r\n    onlyOneNotification: true, // Boolean\r\n    parentEl: document.body,   // Element\r\n    position: \"top center\",    // String\r\n    animations: \"auto\"         // String / Boolean\r\n};\r\n\r\nclass SN {\r\n    constructor(userOptions = {}) {\r\n        this.mergedOptions = mergeOptions(defaultOptions, userOptions);\r\n\r\n        this.autoHide = this.mergedOptions.autoHide;\r\n        this.parentEl = this.mergedOptions.parentEl;\r\n        this.position = this.mergedOptions.position;\r\n        this.motionPref = this.mergedOptions.animations;\r\n\r\n        this.instanceId = null;\r\n\r\n        this.nId = 1;\r\n        this.nodes = {};\r\n        this.msgData = {};\r\n\r\n        this.timeoutIds = {};\r\n        this.events = {};\r\n        this.onlyOne = {\r\n            set: this.mergedOptions.onlyOneNotification,\r\n            states: {},\r\n            nextMsgData: {}\r\n        };\r\n\r\n        this.animatedRun = null;\r\n    }\r\n\r\n    static nodeClasses = {\r\n        wrapper: \"simple-notifier\",\r\n        notification: \"simple-notification\",\r\n        typeRegex: /simple-notification--[A-Za-z]+/g,\r\n        shown: \"is-shown\",\r\n        anim: {\r\n            base: \"animated\",\r\n            show: \"fadeIn\",\r\n            hide: \"fadeOut\"\r\n        }\r\n    }\r\n\r\n    static nodeSkeletons = {\r\n        wrapper: {\r\n            tagName: \"div\",\r\n            attrs: {\r\n                class: SN.nodeClasses.wrapper\r\n            }\r\n        },\r\n        notification: {\r\n            tagName: \"div\",\r\n            attrs: {\r\n                class: SN.nodeClasses.notification,\r\n                role: \"alert\"\r\n            }\r\n        },\r\n        message: {\r\n            tagName: \"p\",\r\n            attrs: {\r\n                class: `${SN.nodeClasses.notification}__message`\r\n            }\r\n        }\r\n    };\r\n\r\n    static defaultMsgData = {\r\n        notext: {\r\n            text: \"This is some dummy text for you, because none was passed in.\",\r\n            type: \"debug\"\r\n        },\r\n        notype: {\r\n            type: \"default\"\r\n        }\r\n    };\r\n\r\n    get animated() {\r\n        switch(this.motionPref) {\r\n            case \"undefined\":\r\n            case \"auto\":\r\n                return motionAllowed();\r\n            default:\r\n                return this.motionPref;\r\n        }\r\n    }\r\n\r\n    get hideCallTimeout() {\r\n        switch(this.autoHide) {\r\n            case true:\r\n                return 3500;\r\n            case false:\r\n                return 0;\r\n            default:\r\n                return this.autoHide;\r\n        }\r\n    }\r\n\r\n    init() {\r\n        console.log(\"SN: Running .init()...\");\r\n\r\n        if (this.instanceId) {\r\n            throw new Error(`SN: .init() has already been called on this instance (${this.instanceId}).`);\r\n        }\r\n\r\n        this.instanceId = getRandomIntUnder(100000);\r\n\r\n        this.nodes.wrapper = createEl(\r\n            SN.nodeSkeletons.wrapper.tagName,\r\n            SN.nodeSkeletons.wrapper.attrs\r\n        );\r\n\r\n        this.nodes.wrapper.dataset.instanceId = this.instanceId;\r\n\r\n        const parentElFChild = this.parentEl.firstElementChild;\r\n\r\n        // Insert the instance in the DOM after any earlier initialized instances sharing the same parentEl.\r\n        const siblingEl = parentElFChild.classList.contains(\"simple-notifier\")\r\n            ? parentElFChild.nextElementSibling\r\n            : parentElFChild;\r\n\r\n        this.parentEl.insertBefore(this.nodes.wrapper, siblingEl);\r\n\r\n        const screenPosArray = this.position.split(\" \");\r\n\r\n        // If only a y-position is set by the user, add an x-position.\r\n        if (screenPosArray.length === 1) {\r\n            screenPosArray[1] = \"center\";\r\n        }\r\n\r\n        this.nodes.wrapper.classList.add(\r\n            `${SN.nodeClasses.wrapper}--pos-y-${screenPosArray[0]}`,\r\n            `${SN.nodeClasses.wrapper}--pos-x-${screenPosArray[1]}`\r\n        );\r\n\r\n        this.events.allDestroyed = new CustomEvent(\"allNotificationsDestroyed\", { detail: {\r\n            instanceId: this.instanceId\r\n        }});\r\n\r\n        console.log(`SN: Instance ${this.instanceId} has been initialized.`);\r\n    }\r\n\r\n    destroy() {\r\n        console.log(\"SN: Running .destroy()...\");\r\n\r\n        if (!this.instanceId) {\r\n            throw new Error(\"SN: Instance isn't initialized!\");\r\n        }\r\n\r\n        if (this.runningDestroy) {\r\n            console.log(\"SN: .destroy was called whilst already running. Returning.\");\r\n\r\n            return;\r\n        }\r\n\r\n        this.runningDestroy = true;\r\n\r\n        this.nodes.wrapper.addEventListener(\"allNotificationsDestroyed\", (e) => {\r\n            console.log(\"SN: All notifications have been destroyed.\");\r\n\r\n            this.nodes.wrapper.remove();\r\n\r\n            if (this.onlyOne) {\r\n                this.onlyOne.states = {};\r\n                this.onlyOne.nextMsgData = {};\r\n            }\r\n\r\n            this.events = {};\r\n\r\n            this.nId = 1;\r\n\r\n            this.instanceId = null;\r\n\r\n            delete this.runningDestroy;\r\n\r\n            console.log(`SN: Instance ${e.detail.instanceId} has been destroyed.`);\r\n        });\r\n\r\n        this.hide();\r\n    }\r\n\r\n    show(text, type) {\r\n        console.log(\"SN: Running .show()...\");\r\n\r\n        if (!this.instanceId) {\r\n            throw new Error(\"SN: Instance isn't initialized!\");\r\n        }\r\n\r\n        if (this.onlyOne.set) {\r\n            if (this.onlyOne.states.inReshow) {\r\n                console.log(\"SN: onlyOneNotification === true and .show() was called during execution ._reshowNotification(). Returning.\");\r\n\r\n                return;\r\n            }\r\n\r\n            if (this.onlyOne.states.isVisible) {\r\n                console.log(\"SN: onlyOneNotification === true and notification is currently visible. Calling ._reshowNotification()...\");\r\n\r\n                this._reshowNotification(text, type);\r\n\r\n                return;\r\n            }\r\n        }\r\n\r\n        let nId = this.nId;\r\n\r\n        if (!this.onlyOne.set) {\r\n            this.nId++;\r\n        }\r\n\r\n        this._initNotification(nId);\r\n\r\n        this._getMsgData(nId, text, type);\r\n\r\n        this._showNewNotification(nId);\r\n    }\r\n\r\n    _initNotification(nId) {\r\n        console.log(`SN: Running ._initNotification() on nId ${nId}...`);\r\n\r\n        this.nodes[nId] = {};\r\n\r\n        for (const [role, values] of Object.entries(SN.nodeSkeletons)) {\r\n            if (role === \"wrapper\")\r\n                continue;\r\n\r\n            this.nodes[nId][role] = createEl(values.tagName, values.attrs);\r\n\r\n            if (role === \"notification\") {\r\n                this.nodes.wrapper.insertBefore(\r\n                    this.nodes[nId][role],\r\n                    this.nodes.wrapper.firstElementChild\r\n                );\r\n            } else {\r\n                this.nodes[nId].notification.append(this.nodes[nId][role]);\r\n            }\r\n        }\r\n\r\n        this.nodes[nId].notification.dataset.notificationId = nId;\r\n\r\n        this.timeoutIds[nId] = {};\r\n\r\n        this.events[nId] = {};\r\n\r\n        this.events[nId].shown = new CustomEvent(\"notificationShown\", { detail: {\r\n            instanceId: this.instanceId,\r\n            notificationId: nId\r\n        }});\r\n        this.events[nId].destroyed = new CustomEvent(\"notificationDestroyed\", { detail: {\r\n            instanceId: this.instanceId,\r\n            notificationId: nId\r\n        }});\r\n\r\n        this.nodes.wrapper.addEventListener(\r\n            \"notificationShown\",\r\n            this.events[nId].shown,\r\n            { once: true }\r\n        );\r\n        this.nodes.wrapper.addEventListener(\r\n            \"notificationDestroyed\",\r\n            this.events[nId].destroyed,\r\n            { once: true }\r\n        );\r\n    }\r\n\r\n    _getMsgData(nId, text, type) {\r\n        console.log(`SN: Running ._getMsgData on nId ${nId}...`);\r\n\r\n        if (!text) {\r\n            if (this.onlyOne.nextMsgData) {\r\n                text = this.onlyOne.nextMsgData.text;\r\n                type = this.onlyOne.nextMsgData.type;\r\n\r\n                this.onlyOne.nextMsgData = {};\r\n            } else {\r\n                text = SN.defaultMsgData.notext.text;\r\n                type = SN.defaultMsgData.notext.type;\r\n            }\r\n        }\r\n\r\n        if (!type) {\r\n            type = SN.defaultMsgData.notype.type;\r\n        }\r\n\r\n        this.msgData[nId] = {};\r\n\r\n        this.msgData[nId].text = text;\r\n        this.msgData[nId].type = type;\r\n    }\r\n\r\n    _showNewNotification(nId) {\r\n        console.log(`SN: Running ._showNewNotification() on nId ${nId}...`);\r\n\r\n        this.animatedRun = this.animated;\r\n\r\n        this.nodes[nId].message.textContent = this.msgData[nId].text;\r\n\r\n        this.nodes[nId].notification.classList.add(\r\n            `${SN.nodeClasses.notification}--${this.msgData[nId].type}`,\r\n               SN.nodeClasses.shown\r\n        );\r\n\r\n        if (this.animatedRun) {\r\n            this.nodes[nId].notification.classList.add(\r\n                SN.nodeClasses.anim.base,\r\n                SN.nodeClasses.anim.show\r\n            );\r\n\r\n            const animTimeout = timeToMs(getPropValue(\r\n                this.nodes[nId].notification,\r\n                \"animation-duration\"\r\n            ));\r\n\r\n            this.timeoutIds[nId].showAnim = setTimeout(() => {\r\n                this.nodes[nId].notification.classList.remove(SN.nodeClasses.anim.show);\r\n            }, animTimeout);\r\n        }\r\n\r\n        if (this.onlyOne.set) {\r\n            this.onlyOne.states.isVisible = true;\r\n        }\r\n\r\n        this.nodes.wrapper.dispatchEvent(this.events[nId].shown);\r\n\r\n        if (this.hideCallTimeout > 0) {\r\n            this.timeoutIds[nId].hideCall = setTimeout(() => {\r\n                this.hide(nId);\r\n            }, this.hideCallTimeout);\r\n        } else {\r\n            this.animatedRun = null;\r\n        }\r\n    }\r\n\r\n    _reshowNotification(text, type) {\r\n        console.log(\"SN: Running ._reshowNotification()...\");\r\n\r\n        this.onlyOne.states.inReshow = true;\r\n\r\n        this.onlyOne.nextMsgData.text = text;\r\n        this.onlyOne.nextMsgData.type = type;\r\n\r\n        clearTimeout(this.timeoutIds[1].hideCall);\r\n\r\n        this.hide(1);\r\n    }\r\n\r\n    hide(nId) {\r\n        console.log(\"SN: Running .hide()...\");\r\n\r\n        if (!this.instanceId) {\r\n            throw new Error(\"SN: Instance isn't initialized!\");\r\n        }\r\n\r\n        if (this.onlyOne.set) {\r\n            if (this.onlyOne.states.inHide) {\r\n                console.log(\"SN: onlyOneNotification === true and .hide() was called whilst already running. Returning.\");\r\n\r\n                return;\r\n            }\r\n\r\n            this.onlyOne.states.inHide = true;\r\n        }\r\n\r\n        let nIdsArray;\r\n\r\n        if (typeof nId === \"number\") {\r\n            if (this.msgData[nId] === \"undefined\") {\r\n                console.warn(`SN: .hide() was called on a non-existant notification. Returning!`);\r\n\r\n                return;\r\n            }\r\n\r\n            nIdsArray = [nId];\r\n        }\r\n\r\n        if (typeof nId === \"undefined\") {\r\n            nIdsArray = Object.keys(this.msgData);\r\n\r\n            if (nIdsArray.length > 0) {\r\n                console.log(this.timeoutIds);\r\n\r\n                Object.values(this.timeoutIds).forEach((nTimeoutIds) => {\r\n                    Object.values(nTimeoutIds).forEach((timeoutId) => {\r\n                        clearTimeout(timeoutId);\r\n                    });\r\n                });\r\n            } else if (this.runningDestroy) {\r\n                this.nodes.wrapper.dispatchEvent(this.events.allDestroyed);\r\n            } else {\r\n                console.warn(\"SN: .hide() was called, but no notification is currently shown. Returning!\");\r\n\r\n                return;\r\n            }\r\n        }\r\n\r\n        let i = 1;\r\n\r\n        nIdsArray.forEach((id) => {\r\n            this._hideNotification(id);\r\n\r\n            i++;\r\n\r\n            if (this.onlyOne.set && i > nIdsArray.length) {\r\n                this.onlyOne.states.inHide = false;\r\n            }\r\n        });\r\n    }\r\n\r\n    _hideNotification(nId) {\r\n        console.log(`SN: Running ._hideNotification() on nId ${nId}...`);\r\n\r\n        if (this.animatedRun === null) {\r\n            this.animatedRun = this.animated;\r\n        }\r\n\r\n        let animTimeout = 0;\r\n\r\n        if (this.animatedRun) {\r\n            this.nodes[nId].notification.classList.add(SN.nodeClasses.anim.hide);\r\n\r\n            animTimeout = timeToMs(getPropValue(\r\n                this.nodes[nId].notification,\r\n                \"animation-duration\"\r\n            ));\r\n        }\r\n\r\n        this.timeoutIds[nId].hideAnim = setTimeout(() => {\r\n            this.nodes[nId].notification.classList.remove(SN.nodeClasses.shown);\r\n            this.nodes[nId].notification.className =\r\n                this.nodes[nId].notification.className.replace(SN.nodeClasses.typeRegex, \"\");\r\n\r\n            if (this.animatedRun) {\r\n                this.nodes[nId].notification.classList.remove(SN.nodeClasses.anim.hide);\r\n            }\r\n\r\n            if (this.onlyOne.set) {\r\n                this.onlyOne.states.isVisible = false;\r\n            }\r\n\r\n            this._destroyNotification(nId);\r\n        }, animTimeout);\r\n    }\r\n\r\n    _destroyNotification(nId) {\r\n        console.log(`SN: Running ._destroyNotification() on nId ${nId}...`);\r\n\r\n        const nodesArrayKeys = Object.keys(this.nodes[nId]);\r\n        const nodesArrayValues = Object.values(this.nodes[nId]);\r\n\r\n        new Promise((resolve) => {\r\n            let nodeKey = 0;\r\n\r\n            nodesArrayValues.forEach((node) => {\r\n                node.remove();\r\n\r\n                nodeKey++;\r\n\r\n                if (nodeKey === nodesArrayKeys.length) {\r\n                    resolve(\"All nodes have been removed succesfully.\");\r\n                }\r\n            });\r\n        })\r\n            .then(() => {\r\n                this.animatedRun = null;\r\n\r\n                delete this.nodes[nId];\r\n                delete this.msgData[nId];\r\n                delete this.timeoutIds[nId];\r\n\r\n                this.nodes.wrapper.dispatchEvent(this.events[nId].destroyed);\r\n\r\n                delete this.events[nId];\r\n\r\n                console.log(`SN: Notification ${nId} has succesfully been destroyed.`);\r\n\r\n                if (Object.keys(this.msgData).length === 0) {\r\n                    this.nodes.wrapper.dispatchEvent(this.events.allDestroyed);\r\n                }\r\n\r\n                if (this.onlyOne.set && this.onlyOne.states.inReshow) {\r\n                    this.onlyOne.states.inReshow = false;\r\n\r\n                    this.show();\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                throw new Error(error);\r\n            });\r\n    }\r\n}\r\n\r\nexport default SN;\r\n","export default function motionAllowed() {\r\n    return !window.matchMedia(\"(prefers-reduced-motion: reduce)\").matches;\r\n}\r\n","// Get a random integer under a given number.\r\nexport default function getRandomIntUnder(max, includeMax) {\r\n    const int = includeMax === true ? 0 : 1;\r\n\r\n    return Math.floor(Math.random() * (max - int));\r\n}\r\n"]}